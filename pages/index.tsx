import type { NextPage } from "next";
import { InlineForm, InlineText } from "react-tinacms-inline";
import { FormOptions, ScreenPlugin, useForm, usePlugin } from "tinacms";
import AboutTwoAlter from "../components/AboutTwoAlter";
import CountDownAlter from "../components/CountDownAlter";
import CourseCatAlter from "../components/CourseCatAlter";
import CourseOne from "../components/CourseOne";
import FooterAlter from "../components/FooterAlter";
import Layout from "../components/Layout";
import NavOneAlter from "../components/NavOneAlter";
import SliderOneAlter from "../components/SliderOneAlter";
import Topbar from "../components/Topbar";
import VideoTwoAlter from "../components/VideoTwoAlter";
import { parseMdFile } from "../helpers/markown";
import { getAllProducts } from "../helpers/product";

const ScreenPlugin1: ScreenPlugin<any> = {
  name: "ÿßÿπÿØÿßÿØÿßÿ™ ÿßŸÑÿµŸÅÿ≠ÿ© ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©",
  Component: () => <h1>Hello ÿßÿπÿØÿßÿØÿßÿ™</h1>,
  Icon: () => <span>üåÅ</span>,
  layout: "fullscreen",
  __type: "screen",
};
const ScreenPlugin2: ScreenPlugin<any> = {
  ...ScreenPlugin1,
  name: "ÿßÿπÿØÿßÿØÿßÿ™ ÿßŸÑŸÖŸàŸÇÿπ",
  Icon: () => <>üì°</>,
  Component: () => <h1>Hello Baby</h1>,
};
const Home: NextPage = ({ mdFile }: any) => {
  //useScreenPlugin(screenPlugin);
  //useScreenPlugin(screenPlugin2);
  const [_, form] = useForm({
    initialValues: {
      ...mdFile,
      title: "ŸÖÿπ ÿØŸàÿ±ÿßÿ™ ÿßŸÑŸäŸÇŸäŸÜ ÿßŸÑÿ™ÿØÿ±Ÿäÿ®Ÿäÿ© ŸÖŸáŸÖÿ™ŸÜÿß ŸáŸä ÿ≤ŸäÿßÿØÿ© ÿßŸÑŸÖÿπÿ±ŸÅÿ© ŸÑŸÑÿ¨ŸÖŸäÿπ",
      innerTitle: "ÿ™ÿ¨ÿ±ÿ®ÿ©",
      countDownSct: {
        tagline: "ÿßÿ≠ÿµŸÑ ÿπŸÑŸä ÿØŸàÿ±ÿßÿ™ ŸÖÿ¨ÿßŸÜŸäÿ© ÿπŸÜÿØ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ",
        header: "ŸÇŸÖ ÿ®ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿ¢ŸÜ",
      },
      welcomeSct: {
        header: `ŸÜÿ±ÿ≠ÿ® ÿ®ŸÉŸÖ ŸÖÿπ ...
ÿßŸÑŸäŸÇŸäŸÜ ŸÑŸÑÿ®ÿ≠ÿ´ ŸàÿßŸÑÿ™ÿ∑ŸàŸäÿ±`,
      },
    },
    id: mdFile.fileName,
    label: mdFile.fileName,
    fields: [
      /*
      {
        name: "innerTitle",
        label: "ŸÖÿß ŸáŸà",
        component: "text",
      },
      */
    ],
    onSubmit: (formState: any) => {
      console.log(formState);
      return;
    },
  } as FormOptions<any, any>);
  usePlugin(form);
  return (
    <>
      <InlineForm form={form}>
        <Layout pageTitle="ÿßŸÑÿØŸàÿ±ÿßÿ™ ÿßŸÑÿ™ÿØÿ±Ÿäÿ®Ÿäÿ©">
          <Topbar />
          <NavOneAlter />
          <SliderOneAlter />
          <AboutTwoAlter />
          <CourseOne />
          <VideoTwoAlter />
          <CountDownAlter />
          <CourseCatAlter />
          <FooterAlter />
          <div>
            <h1 style={{ direction: "rtl" }}>
              <InlineText name="frontmatter.title" focusRing={false} />
            </h1>
          </div>
        </Layout>
      </InlineForm>
    </>
  );
};
const getStaticProps = async () => {
  return {
    props: {
      mdFile: parseMdFile("pages/home.md"),
      products: getAllProducts(),
    },
  };
};
export default Home;
export { getStaticProps };
